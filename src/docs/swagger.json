{
  "openapi": "3.0.0",
  "info": {
    "title": "Blog Management API",
    "version": "1.0.0",
    "description": "A comprehensive API for managing blogs, users, and comments with JWT authentication",
    "contact": {
      "name": "API Support",
      "email": "aimegetz@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5500/api/v2",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter JWT token obtained from login"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the user"
          },
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100,
            "description": "Full name of the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the user"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "description": "Password for the user account"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female", "other"],
            "description": "Gender of the user"
          },
          "role": {
            "type": "string",
            "enum": ["user", "admin"],
            "description": "Role of the user",
            "default": "user"
          },
          "profilePicture": {
            "type": "string",
            "format": "uri",
            "description": "Profile picture URL"
          },
          "provider": {
            "type": "string",
            "enum": ["local", "google"],
            "description": "Authentication provider",
            "default": "local"
          },
          "googleId": {
            "type": "string",
            "description": "Google OAuth ID"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Blog": {
        "type": "object",
        "required": ["title", "description", "content", "isPublished"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the blog"
          },
          "title": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "Title of the blog post"
          },
          "description": {
            "type": "string",
            "minLength": 20,
            "description": "Description of the blog post"
          },
          "content": {
            "type": "string",
            "minLength": 10,
            "description": "Content of the blog post"
          },
          "slug": {
            "type": "string",
            "description": "URL-friendly version of the title"
          },
          "blog_image_url": {
            "type": "string",
            "format": "uri",
            "description": "Featured image URL"
          },
          "author": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the blog author"
          },
          "isPublished": {
            "type": "boolean",
            "description": "Whether the blog is published"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Comment": {
        "type": "object",
        "required": ["content"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the comment"
          },
          "content": {
            "type": "string",
            "minLength": 1,
            "maxLength": 500,
            "description": "Comment content"
          },
          "blogId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the blog being commented on"
          },
          "author": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the comment author"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Like": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the like"
          },
          "user": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the user who liked the blog"
          },
          "blogId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the blog being liked"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the request was successful"
          },
          "message": {
            "type": "string",
            "description": "Response message"
          },
          "data": {
            "description": "Response data"
          },
          "status": {
            "type": "integer",
            "description": "HTTP status code"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "status": {
            "type": "integer",
            "description": "HTTP status code"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": ["name", "email", "password", "gender"],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100,
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "example": "password123"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female", "other"],
            "example": "male"
          }
        }
      },
      "CreateBlogRequest": {
        "type": "object",
        "required": ["title", "description", "content", "isPublished"],
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "example": "My First Blog Post"
          },
          "description": {
            "type": "string",
            "minLength": 20,
            "example": "This is a detailed description of my first blog post with more than 20 characters"
          },
          "content": {
            "type": "string",
            "minLength": 10,
            "example": "This is the content of my first blog post..."
          },
          "isPublished": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "UpdateBlogRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "example": "Updated Blog Title"
          },
          "description": {
            "type": "string",
            "minLength": 20,
            "example": "Updated detailed description of the blog post with more than 20 characters"
          },
          "content": {
            "type": "string",
            "minLength": 10,
            "example": "Updated content for the blog post..."
          },
          "isPublished": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "CreateCommentRequest": {
        "type": "object",
        "required": ["content"],
        "properties": {
          "content": {
            "type": "string",
            "minLength": 1,
            "maxLength": 500,
            "example": "This is a great blog post!"
          }
        }
      },
      "Subscriber": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the subscriber"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the subscriber"
          },
          "isSubscribed": {
            "type": "boolean",
            "description": "Subscription status",
            "default": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SubscribeRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    },
    {
      "name": "Blogs",
      "description": "Blog management operations"
    },
    {
      "name": "Comments",
      "description": "Comment management operations"
    },
    {
      "name": "Likes",
      "description": "Like management operations"
    },
    {
      "name": "Subscribers",
      "description": "Newsletter subscription management"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Create a new user account with email and password",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "status": 201,
                  "message": "User added successfully",
                  "data": {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "name": "John Doe",
                    "email": "john@example.com",
                    "gender": "male",
                    "role": "user",
                    "provider": "local"
                  }
                }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "success": false,
                  "status": 409,
                  "message": "User already exists"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "description": "Authenticate user and return JWT token",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "token": {
                              "type": "string",
                              "description": "JWT authentication token"
                            },
                            "user": {
                              "$ref": "#/components/schemas/User"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "status": 200,
                  "message": "Login successful",
                  "data": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                    "user": {
                      "id": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "John Doe",
                      "email": "john@example.com",
                      "role": "user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logout user",
        "description": "Invalidate the current JWT token and logout user",
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "success": true,
                  "status": 200,
                  "message": "Logout successful - token destroyed",
                  "data": null
                }
              }
            }
          },
          "400": {
            "description": "No token found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Initiate Google OAuth login",
        "description": "Redirects to Google OAuth consent screen",
        "security": [],
        "responses": {
          "302": {
            "description": "Redirect to Google OAuth"
          }
        }
      }
    },
    "/auth/google/callback": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Google OAuth callback",
        "description": "Handles Google OAuth callback and returns JWT token",
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "schema": {
              "type": "string"
            },
            "description": "Google OAuth authorization code"
          }
        ],
        "responses": {
          "200": {
            "description": "OAuth login successful",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "string",
                          "description": "JWT authentication token"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/blogs": {
      "get": {
        "tags": ["Blogs"],
        "summary": "Get all blogs",
        "description": "Retrieve a list of all blog posts",
        "responses": {
          "200": {
            "description": "Blogs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Blog"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "status": 200,
                  "message": "Blogs retrieved successfully",
                  "data": [
                    {
                      "id": "123e4567-e89b-12d3-a456-426614174000",
                      "title": "My First Blog",
                      "content": "This is my first blog post...",
                      "slug": "my-first-blog",
                      "image": "https://example.com/image.jpg",
                      "authorId": "456e7890-e89b-12d3-a456-426614174000",
                      "createdAt": "2025-01-01T00:00:00Z",
                      "updatedAt": "2025-01-01T00:00:00Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Blogs"],
        "summary": "Create a new blog",
        "description": "Create a new blog post (Admin only)",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["title", "description", "content", "isPublished"],
                "properties": {
                  "title": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "example": "My New Blog Post"
                  },
                  "description": {
                    "type": "string",
                    "minLength": 20,
                    "example": "This is a detailed description of my new blog post with more than 20 characters"
                  },
                  "content": {
                    "type": "string",
                    "minLength": 10,
                    "example": "This is the content of my new blog post..."
                  },
                  "isPublished": {
                    "type": "boolean",
                    "example": true
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Blog featured image"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Blog created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Blog"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin role required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/blogs/{id}": {
      "get": {
        "tags": ["Blogs"],
        "summary": "Get a specific blog",
        "description": "Retrieve a single blog post by ID",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Blog ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Blog retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Blog"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Blog not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Blogs"],
        "summary": "Update a blog",
        "description": "Update an existing blog post (Admin only)",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Blog ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBlogRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Blog updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Blog"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin role required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Blog not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Blogs"],
        "summary": "Delete a blog",
        "description": "Delete an existing blog post (Admin only)",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Blog ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Blog deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin role required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Blog not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/comments": {
      "get": {
        "tags": ["Comments"],
        "summary": "Get all comments",
        "description": "Retrieve a list of all comments",
        "responses": {
          "200": {
            "description": "Comments retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Comment"
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "status": 200,
                  "message": "Comments retrieved successfully",
                  "data": [
                    {
                      "id": "123e4567-e89b-12d3-a456-426614174000",
                      "message": "Great blog post!",
                      "blogId": "456e7890-e89b-12d3-a456-426614174000",
                      "userId": "789e0123-e89b-12d3-a456-426614174000",
                      "createdAt": "2025-01-01T00:00:00Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{id}/message": {
      "post": {
        "tags": ["Comments"],
        "summary": "Add a comment to a blog",
        "description": "Create a new comment on a specific blog post",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Blog ID to comment on"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Comment"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Blog not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/blogs/{id}/like": {
      "post": {
        "tags": ["Likes"],
        "summary": "Toggle like on a blog post",
        "description": "Like a blog post if not already liked, or unlike it if already liked (toggle functionality)",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Blog ID to toggle like"
          }
        ],
        "responses": {
          "201": {
            "description": "Blog liked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Like"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "status": 201,
                  "message": "Blog liked successfully",
                  "data": {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "user": "456e7890-e89b-12d3-a456-426614174000",
                    "blogId": "789e0123-e89b-12d3-a456-426614174000",
                    "createdAt": "2025-01-01T00:00:00Z",
                    "updatedAt": "2025-01-01T00:00:00Z"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Blog unliked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "success": true,
                  "status": 200,
                  "message": "Blog unliked successfully",
                  "data": null
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Blog not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/blogs/{id}/likes": {
      "get": {
        "tags": ["Likes"],
        "summary": "Get all likes for a blog",
        "description": "Retrieve all likes for a specific blog post with user information",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Blog ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Likes retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "likes": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/Like"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "userInfo": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "email": {
                                            "type": "string",
                                            "format": "email"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "count": {
                              "type": "integer",
                              "description": "Total number of likes"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "status": 200,
                  "message": "Likes retrieved successfully",
                  "data": {
                    "likes": [
                      {
                        "id": "123e4567-e89b-12d3-a456-426614174000",
                        "user": "456e7890-e89b-12d3-a456-426614174000",
                        "blogId": "789e0123-e89b-12d3-a456-426614174000",
                        "createdAt": "2025-01-01T00:00:00Z",
                        "updatedAt": "2025-01-01T00:00:00Z",
                        "userInfo": {
                          "id": "456e7890-e89b-12d3-a456-426614174000",
                          "name": "John Doe",
                          "email": "john@example.com"
                        }
                      }
                    ],
                    "count": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid blog ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscribers/subscribe": {
      "post": {
        "tags": ["Subscribers"],
        "summary": "Subscribe to newsletter",
        "description": "Subscribe an email address to the newsletter",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully subscribed",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "email": {
                              "type": "string",
                              "format": "email"
                            },
                            "isSubscribed": {
                              "type": "boolean"
                            },
                            "subscribedAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "status": 201,
                  "message": "Successfully subscribed! A welcome email has been sent to your inbox.",
                  "data": {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "email": "user@example.com",
                    "isSubscribed": true,
                    "subscribedAt": "2025-08-02T10:30:00Z"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Resubscribed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "format": "email"
                            },
                            "isSubscribed": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "status": 200,
                  "message": "Welcome back! You have been resubscribed successfully and a confirmation email has been sent.",
                  "data": {
                    "email": "user@example.com",
                    "isSubscribed": true
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email already subscribed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "success": false,
                  "status": 409,
                  "message": "This email is already subscribed to our newsletter"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscribers/unsubscribe": {
      "get": {
        "tags": ["Subscribers"],
        "summary": "Unsubscribe from newsletter",
        "description": "Unsubscribe an email address from the newsletter using a one-click link",
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            },
            "description": "Email address to unsubscribe",
            "example": "user@example.com"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully unsubscribed",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "format": "email"
                            },
                            "isSubscribed": {
                              "type": "boolean"
                            },
                            "unsubscribedAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "status": 200,
                  "message": "Successfully unsubscribed! A confirmation email has been sent.",
                  "data": {
                    "email": "user@example.com",
                    "isSubscribed": false,
                    "unsubscribedAt": "2025-08-02T10:30:00Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email already unsubscribed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "success": false,
                  "status": 400,
                  "message": "This email is already unsubscribed"
                }
              }
            }
          },
          "404": {
            "description": "Email not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "success": false,
                  "status": 404,
                  "message": "Email not found in our subscription list"
                }
              }
            }
          }
        }
      }
    },
    "/subscribers": {
      "get": {
        "tags": ["Subscribers"],
        "summary": "Get all subscribers (Admin only)",
        "description": "Retrieve a paginated list of all subscribers with filtering options",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of subscribers per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Subscribers retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "subscribers": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Subscriber"
                              }
                            },
                            "pagination": {
                              "type": "object",
                              "properties": {
                                "currentPage": {
                                  "type": "integer"
                                },
                                "totalPages": {
                                  "type": "integer"
                                },
                                "totalSubscribers": {
                                  "type": "integer"
                                },
                                "limit": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "success": true,
                  "status": 200,
                  "message": "Subscribers retrieved successfully",
                  "data": {
                    "subscribers": [
                      {
                        "id": "123e4567-e89b-12d3-a456-426614174000",
                        "email": "user1@example.com",
                        "isSubscribed": true,
                        "createdAt": "2025-08-02T10:30:00Z",
                        "updatedAt": "2025-08-02T10:30:00Z"
                      },
                      {
                        "id": "456e7890-e89b-12d3-a456-426614174000",
                        "email": "user2@example.com",
                        "isSubscribed": false,
                        "createdAt": "2025-08-01T15:20:00Z",
                        "updatedAt": "2025-08-02T09:15:00Z"
                      }
                    ],
                    "pagination": {
                      "currentPage": 1,
                      "totalPages": 3,
                      "totalSubscribers": 25,
                      "limit": 10
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  }
}
